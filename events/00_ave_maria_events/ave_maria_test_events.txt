########################################################################################
#                                         											   #
# AVE MARIA events																	   #
# A Very Extensive Modification for Appropriate Realism and Improved Authenticity	   #
#                                         											   #
# ROMAN ADMINISTRATION EVENTS														   #
#                               													   #
########################################################################################

# Written by Atreides

namespace = ave_maria_test_events

# ave_maria_test_events


# TABLE OF CONTENT:



#############################################
# TEST TEST TEST TEST TEST TEST				#
#############################################

## TEST make everyone feudal independent and allied, need a stunted allied game rule
ave_maria_test_events.0001 = {
	type = character_event
	hidden = yes

	
	trigger = {
				
	}
	
	immediate = {
		every_ruler = {
			limit = {
				has_government = feudal_government
				highest_held_title_tier >= tier_duchy
			}
			primary_title = {
				save_temporary_scope_as = liege_title
				add_to_variable_list = {
					name = realm_titles
					target = this
				}
			}
			every_vassal = {
				every_held_title = {
					limit = {
						tier >= tier_county
					}
					scope:liege_title = {
						add_to_variable_list = {
							name = realm_titles
							target = prev
						}
					}				
				}
			}
			primary_title = {
				ordered_in_list = {
					list = realm_titles
					order_by = realm_title_hierarchy
				}
			}
			
			every_vassal = {
				create_alliance = {
					target = prev
					allied_through_owner = this
					allied_through_target = prev
				}
				
				create_title_and_vassal_change = {
					type = independency
					save_scope_as = change
					add_claim_on_loss = no
				}
				this = { # This opinion modifier controls the interaction, and is removed when breaking the alliance in any way (though on_actions)
					add_opinion = {
						modifier = perk_negotiated_alliance_opinion
						target = root
					}
				}
				becomes_independent = { change = scope:change }
				resolve_title_and_vassal_change = scope:change

				every_held_title = {
					set_variable = {
						name = feodum_liege_title
						value = scope:liege_title
					}
				}
				
				every_vassal = {
					create_alliance = {
						target = prev
						allied_through_owner = this
						allied_through_target = prev
					}
					this = { # This opinion modifier controls the interaction, and is removed when breaking the alliance in any way (though on_actions)
						add_opinion = {
							modifier = perk_negotiated_alliance_opinion
							target = prev
						}
					}
					create_title_and_vassal_change = {
						type = independency
						save_scope_as = change
						add_claim_on_loss = no
					}
					becomes_independent = { change = scope:change }
					resolve_title_and_vassal_change = scope:change
				}
			}
		}
		
		title:k_france.holder = {
			save_scope_as = zzzzzz
		}
		title:d_normandy.holder = {
			break_alliance = scope:zzzzzz
		}
	}

	
	
}

## make vassals independent
ave_maria_test_events.0002 = {
	type = character_event
	hidden = yes

	
	trigger = {
		
	}
	
	immediate = {
		primary_title = {
			save_temporary_scope_as = liege_title
			add_to_variable_list = {
				name = realm_titles
				target = this
			}
		}
		every_vassal = {
			every_held_title = {
				limit = {
					tier >= tier_county
				}
				scope:liege_title = {
					add_to_variable_list = {
						name = realm_titles
						target = prev
					}
				}				
			}
		}
		primary_title = {
			ordered_in_list = {
				list = realm_titles
				order_by = realm_title_hierarchy
			}
		}
		
		every_vassal = {
			create_alliance = {
				target = prev
				allied_through_owner = this
				allied_through_target = prev
			}
			
			create_title_and_vassal_change = {
				type = independency
				save_scope_as = change
				add_claim_on_loss = no
			}
			this = { # This opinion modifier controls the interaction, and is removed when breaking the alliance in any way (though on_actions)
				add_opinion = {
					modifier = perk_negotiated_alliance_opinion
					target = root
				}
			}
			becomes_independent = { change = scope:change }
			resolve_title_and_vassal_change = scope:change

			every_held_title = {
				set_variable = {
					name = feodum_liege_title
					value = scope:liege_title
				}
			}
			
			every_vassal = {
				create_alliance = {
					target = prev
					allied_through_owner = this
					allied_through_target = prev
				}
				this = { # This opinion modifier controls the interaction, and is removed when breaking the alliance in any way (though on_actions)
				add_opinion = {
						modifier = perk_negotiated_alliance_opinion
						target = prev
					}
				}
				create_title_and_vassal_change = {
					type = independency
					save_scope_as = change
					add_claim_on_loss = no
				}
				becomes_independent = { change = scope:change }
				resolve_title_and_vassal_change = scope:change
			}
		}
	}

}

## TEST  get the feodum variable for testing
ave_maria_test_events.0003 = {
	type = character_event
	hidden = yes

	
	trigger = {
				
	}
	
	immediate = {
		set_global_variable = { 
			name = feodum_test
			value = yes
		}
	}

	
	
}

## TEST - break alliance
ave_maria_test_events.0004 = {
	type = character_event
	hidden = yes

	
	trigger = {
				
	}
	
	immediate = {
		title:k_france.holder = {
			save_scope_as = zzzzzz
		}
		title:d_normandy.holder = {
			break_alliance = scope:zzzzzz
		}
		
	}

	
	
}

## Test
ave_maria_test_events.0005 = {
	type = character_event
	hidden = yes

	
	trigger = {
				
	}
	
	immediate = {
		primary_title = {
			save_temporary_scope_as = liege_title
			add_to_variable_list = {
				name = realm_titles
				target = this
			}
		}
		every_vassal = {
			every_held_title = {
				limit = {
					tier >= tier_county
				}
				scope:liege_title = {
					add_to_variable_list = {
						name = realm_titles
						target = prev
					}
				}				
			}
		}
		primary_title = {
			ordered_in_list = {
				list = realm_titles
				order_by = realm_title_hierarchy
			}
		}
		
		## Trying to make the list the same name as the liege title, (cf orc_test scripted effect) does not work
		# primary_title = {
			# set_variable = {
				# name = liege_title
				# value = this
			# }
		# }
		# orc_test = { 
			# LIEGE_TITLE = var:liege_title
		# }
	}

	
	
}

## Test
ave_maria_test_events.0006 = {
	# type = character_event
	hidden = yes

	
	trigger = {
				
	}
	
	immediate = {
		create_character = {
			location = root.capital_province
			template = pool_repopulate_diplomacy
			culture = root.culture
			faith = root.faith
			trait = orc_pop
		}
	}
	
}

ave_maria_test_events.0007 = {
	type = character_event
	title = ave_maria_test_events.0007.title
	desc = ave_maria_test_events.0007.desc

	theme = realm

	left_portrait = {
		character = root
		animation = idle
	}


	override_background = {
		event_background = ave_maria_test
		
	}

	option = {
		name = ave_maria_test_events.0007.OPT.A
		# send_interface_message = {
			# type = ave_maria_roman_administration_legitimacy_gain
			# title = {
				# first_valid = {
					# desc = ave_maria_roman_administration_legitimacy_gain.message
				# }
			# }
			# left_icon = scope:actor
			# change_variable = {
				# name = roman_administration_legitimacy
				# add = 10
			# }
		# }
		# change_government = theocracy_government
		province:6043 = {
			set_holding_type = church_holding
		}
		title:k_fatimid_dawa.holder = {
			change_government = theocracy_government
		}
	}
}


